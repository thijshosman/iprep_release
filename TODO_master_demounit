
This file describes what all the todos are for the demounit master development branch. 


parkertransfer:
v-allow homing to happen in the wrong direction. dir should be in a tag so that iprep can use it either way, also for normal positions
-the 'default' values after calibration should be in tags, not hardcoded. now the current value used is stored in tags, but is overridden with what is in the code upon iprep_init run
-

pecs:
-add new shutter and argon functions to simulator
v-gate valve: check sensors before issuing open/close to speed up workflow
-check state shutter coating sensor




general improvements that are scheduled to be done in this branch:
(workflow)-do we really want the state machine to throw exceptions when asked to go start milling/ebsd/etc when that is prohibited? think about it. 
v (workflow)-when a dock is no present, iprep_init throws exception and does not fully load
(gripper)-fix bug in open/close once: if gripper does not move, it won't work this way
(dock/gripper)-send allmotion configuration
(workflow)-when a transfer starts, check for consistency beforehand
v (workflow)-home SEM stage to clear as part of workflow to prevent problems after pressing start button
(sem)-correct for drift in survey image, set maximum shift parameter and don't move but continue workflow if shift exceeds this
(workflow)-don't check dock mode at iprep_init as this prevents dock swap when dm is offline
(workflow)-changing tags during transfer creates consistency problems
(workflow)-system assumes that calibrateformode (which sets positions parker) is run before doing an initial transfer, which is different from how the SEM coordinates are set. change this t obe like SEM
(workflow)-after dock swap, set a flag that does not allow movement until iprep_scribemarkervectorcorrection has been run
(UI)-moves long function implementations from iprep_ui; these belong un iprep_main
(workflow)-iprep_init should not overwrite the parker_positions
(workflow)-calibrateformode: mode is only read after setting parkerpositions, this needs to be switched around

(workflow/ui)-fix pressing resume after pressing pause before it actually pauses. this causes bug
(workflow)-if max slices is reached already and workflow has started, it still gets to running mode; needs a check
(workflow)-order if images in 3D stack is reversed
(workflow/ui)-starting iprep_image from menu increases slice number. it is not supposed to do that
(workflow/sem)-we incorrectly reset focus to value used in nominal_imaging. need to rewrite the stuff with saving workflows in sem class.

 (linearworkflow)-make a class for 'transfers' and make an object for each transfer that defines it instead of hardcoding it in linearworkflow class. linearworkflow would invoke the 'do' method in this command-like pattern. this is more flexible than what we have now. we can lateron even go to a script-like 

(docks)-allow chamberscope camera on/off
(semcoordmanager/docks)-move calibrating coordinates from dock class to workflow class



alignment: 
(1)-store calibration values for SEM (scribe_pos_ebsd, scribe_pos_planar, reference_ebsd, reference_planar) and parker (pickup_dropoff_ebsd, pickup_dropoff_planar) in (sem position and numeric) tags. these do NOT change except when alignment changes. 
(2)-store vectors for SEM coordinates (ie where is highgridfront with respect to scribe_pos? where is clear with respect to reference?) in (sem position)tags. these get applied when IPrep calibration routines are ran
(3)-store values used by workflow routines in tags. the workflow uses these and does not know of ebsd/planar. these tags do not get changed except by IPrep calibration routines. 
notes:
-no values are hardcoded in code; the vectors (2) can change manually, the calibration values can change (1), but (3) is always found by applying (2) to (1) in a controlled routine that can be ran as often as needed
-the vectors (2) and the calibration values (1) have default values that can be set by running a function. 




