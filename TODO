
A (before packing up): 
-framework for error handling
-save SEMcoords object into tags
	-new SEMcoordManager class that is instantiated by SEM_iprep that has methods for:
		-object getCoordFromTag(name)
		-void saveCoordToTag(name)
		-taglist listCoords()
	-this will replace semcoord attributes of SEM_iprep class so that SEM_iprep methods that need coordinates get them directly from the tags through the semcoordmanager
-update sem_iprep to add consistency check for sem state changes that checks current state against coordinates saved in tag
-puncture classes with checks. check for tags to prevent interface problems in classes:
	-SEM checks that parker is < 400
	-check tag names for safety functions
-ABC for hw to simulate iprep after it ships
	-planardock and ebsddock differentiation solution
-check for hw bridge fault in transfer class
-proper start routine
-update functions in Sal's UI module to include error handling and agree on error codes
-make sure workflow can start from PECS as well (ie after DM restart)


B (while in shipping):
-clean up main to put stuff back in classes below
	-remove kv/wd stuff from sem class
	-handle imaging from main, remove from state machine and workflow
	-handle pecs camera back in pecs class
-multi ROI
-implement proper user dialog in combination of results/debug/logfile/UI menus









